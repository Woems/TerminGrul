<?php  ini_set('display_errors', true);  error_reporting(E_ALL);  require_once("../config/config.php");  require_once("../libs/get_post.lib.php");    /*echo("Erstelle Tabelle user");  $sth = $db->prepare('CREATE TABLE IF NOT EXISTS `user` (`id` int(11) NOT NULL,  `user` varchar(100) NOT NULL,  `password` varchar(100) NOT NULL) ENGINE=InnoDB DEFAULT CHARSET=latin1;');  $sth->execute();*/  //    $tmp = $sth->fetchAll(PDO::FETCH_ASSOC);  class DBTable  {    protected $dbname = "";    protected $struktur = array();	public function __construct($name)	{	  $this->dbname=$name;	}	public function s($name, $length=100,$def=NULL) // String	{      $this->struktur[$name]="varchar(".$length.") NOT NULL".(isset($def)?" DEFAULT '".$def."'":"");      return $this;	}	public function i($name,$def=NULL) // Int	{      $this->struktur[$name]="int(11) NOT NULL".(isset($def)?" DEFAULT '".$def."'":"");      return $this;	}	public function b($name,$def=NULL) // Bool	{      $this->struktur[$name]="tinyint(1) NOT NULL".(isset($def)?" DEFAULT '".$def."'":"");      return $this;	}	public function d($name,$def=NULL) // Date	{      $this->struktur[$name]="datetime NOT NULL".(isset($def)?" DEFAULT '".$def."'":"");      return $this;	}	public function t($name) // Timestamp	{      $this->struktur[$name]="timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP";      return $this;	}	public function toString()	{	  $r=array();	  $ret = 'CREATE TABLE IF NOT EXISTS `'.$this->dbname."` (\n";	  foreach ($this->struktur as $key => $value)	    $r[]='`'.$key.'` '.$value;	  $ret .= join(",\n", $r);      $ret .= ') ENGINE=InnoDB DEFAULT CHARSET=latin1;';	  return $ret;	}	public function toHTML()	{	  $r=array();	  $ret = 'CREATE TABLE IF NOT EXISTS `'.$this->dbname."` (<br>";	  foreach ($this->struktur as $key => $value)	    $r[]='`'.$key.'` '.$value;	  $ret .= join(",<br>", $r);      $ret .= '<br>) ENGINE=InnoDB DEFAULT CHARSET=latin1;<br>';	  return $ret;	}	public function create($keys="")	{	  global $db;	  echo "CREATE ".$this->dbname.": ".($db->prepare($this->toString())->execute()?"OK":"ERROR")."<br>";	  $this->pk($keys);	  //$db->prepare("ALTER TABLE `".$this->dbname."` ADD PRIMARY KEY(`id`);")->execute();	  $db->prepare("ALTER TABLE `".$this->dbname."` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;")->execute();      return $this;	}	public function pk($keys)	{	  global $db;	  if (is_string($keys)) $keys=explode(",",$keys);	  if (!is_array($keys) || count($keys)==0) return;	  $keys=join(",", array_map(function ($a) { return "`".$a."`"; }, $keys));	  //echo "ALTER TABLE `".$this->dbname."` ADD PRIMARY KEY( ".$keys.");";	  $db->prepare("ALTER TABLE `".$this->dbname."` ADD PRIMARY KEY( ".$keys.");")->execute();	}	public function drop()	{	  global $db;	  echo "DROP ".$this->dbname.": ".($db->prepare("DROP TABLE `".$this->dbname."`")->execute()?"OK":"ERROR")."<br>";      return $this;	}  }  (new DBTable("user"))->i("id")->s("user")->s("passwd")->s("email")->b("disabled",0)->b("emailverif",0)->d("lastlogin",0)->t("changed")->create("id");  (new DBTable("termin"))->i("id")->s("uniqueid")->s("termin")->s("desc",1000)->i("creater")->b("versteckt",0)->t("changed")->drop()->create("id");  (new DBTable("termin-zeiten"))->i("id")->i("terminid")->i("creater")->d("zeit",0)->i("bei")->t("changed")->drop()->create("id");  (new DBTable("termin-mitglieder"))->i("terminid")->i("userid")->t("changed")->drop()->create("terminid,userid");  (new DBTable("termin-votes"))->i("terminid")->i("userid")->i("zeitenid")->i("vote")->t("changed")->drop()->create("terminid,userid,zeitenid");  //(new DBTable("gebucht"))->drop();  //(new DBTable("zeiten"))->drop();  //echo (new DBTable("kino"))->drop()->toHTML();?>